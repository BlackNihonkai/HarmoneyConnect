"""
Django settings for HarmoneyConnect project.

Generated by 'django-admin startproject' using Django 3.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv
from decouple import config
from dj_database_url import parse as dburl

# .envファイルの内容を読み込見込む

BASE_DIR = Path(__file__).resolve().parent.parent
DEBUG = 'RENDER' not in os.environ

#Renderデプロイ用
if DEBUG == False:
    load_dotenv('/etc/secrets/.env')
    RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
    ALLOWED_HOSTS = [RENDER_EXTERNAL_HOSTNAME]
    default_dburl = "sqlite:///" + str(BASE_DIR / "db.sqlite3")
    STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
    DATABASES = {
        "default": config("DATABASE_URL", default=default_dburl, cast=dburl),
    }

    REDIS_URL=os.environ.get('REDIS_URL')
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels_redis.core.RedisChannelLayer", 
            "CONFIG": {
                "hosts": [REDIS_URL]
            }
        }
    }
    MEDIA_URL='/media/'
    DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

    CLOUDINARY_STORAGE  = {
      'CLOUD_NAME':'dvh5ehszr',
      'API_KEY':os.environ.get('CLOUDINARY_API_KEY'),
      'API_SECRET':os.environ.get('CLOUDINARY_API_SECRET'),
    }
    Default_image='media/default_img.png'
    WS_URL='wss://harmoneyconnect.onrender.com/'
    

else:
    load_dotenv()
    MEDIA_ROOT=BASE_DIR/'media'
    MEDIA_URL='media/'
    ALLOWED_HOSTS = ['*']
    DATABASES = {
        'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'HC-DB',
        'USER': 'DB-developer',
        'PASSWORD': 'DB-developer-pw' ,
        'HOST': 'db',
        'POST': 3306
        }
    }

    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels_redis.core.RedisChannelLayer",
            "CONFIG": {
                "hosts": [("redis", 6379)],
            },
        },
    }
    Default_image='kuma.png'
    WS_URL='ws://localhost:8000/'

SUPERUSER_NAME = os.environ["SUPERUSER_NAME"]
SUPERUSER_EMAIL = os.environ["SUPERUSER_EMAIL"]
SUPERUSER_PASSWORD = os.environ["SUPERUSER_PASSWORD"]


# os.environを用いて環境変数を表示させます

# Build paths inside the project like this: BASE_DIR / 'subdir'.

#env = environ.Env()
#env.read_env(os.path.join(BASE_DIR,'.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!


# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app.apps.AppConfig', 
    'channels',
    'cloudinary_storage',
    'cloudinary',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # Renderデプロイ用に追加
]

ROOT_URLCONF = 'HarmoneyConnect.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'HarmoneyConnect.wsgi.application'
ASGI_APPLICATION = 'HarmoneyConnect.routing.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
"""



# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT=BASE_DIR/'staticfiles'
STATICFILES_DIRS=[str(BASE_DIR/'static')]


LOGIN_URL='login'

AUTH_USER_MODEL = 'app.CustomUser'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field






